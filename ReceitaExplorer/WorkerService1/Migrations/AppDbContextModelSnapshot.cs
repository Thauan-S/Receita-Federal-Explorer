// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkerService1.Context;

#nullable disable

namespace WorkerService1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkerService1.Entityes.Cnae", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("Cnaes");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<float?>("CapitalSocial")
                        .HasColumnType("real")
                        .HasColumnName("capital_social");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_basico");

                    b.Property<string>("EnteFederativoResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ente_responsavel");

                    b.Property<string>("IdNaturezaJuridica")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("natureza_juridica_id");

                    b.Property<string>("PorteEmpresa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("porte");

                    b.Property<string>("QualificacaoResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("qualificacao_responsavel");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("razao_social");

                    b.HasKey("Id");

                    b.HasIndex("IdNaturezaJuridica");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Estabelecimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cep");

                    b.Property<string>("CnaeFiscalSecundario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnae_fiscal_secundario");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_basico");

                    b.Property<string>("CnpjDv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_dv");

                    b.Property<string>("CnpjOrdem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_ordem");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("complemento");

                    b.Property<string>("CorreioEletronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("correio_eletronico");

                    b.Property<string>("DataInicioAtividades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_inicio_atividades");

                    b.Property<string>("DataSituacaoCadastral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_situacao_cadastral");

                    b.Property<string>("DataSituacaoEspecial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_situacao_especial");

                    b.Property<string>("Ddd1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ddd1");

                    b.Property<string>("Ddd2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ddd2");

                    b.Property<string>("DddFax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ddd_fax");

                    b.Property<string>("IdCnae")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("cnae_id");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("empresa_id");

                    b.Property<string>("IdMotivo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("motivo_situacao_cadastral_id");

                    b.Property<string>("IdMunicipio")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("municipio_id");

                    b.Property<string>("IdPais")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("pais_id");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("logradouro");

                    b.Property<string>("MatrizFilial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("matriz_filial");

                    b.Property<string>("NomeCidadeExterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_cidade_exterior");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numero");

                    b.Property<string>("SituacaoCadastral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("situacao_cadastral");

                    b.Property<string>("SituacaoEspecial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("situacao_especial");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone1");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone2");

                    b.Property<string>("TelefoneFax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone_fax");

                    b.Property<string>("TipoLogradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo_logradouro");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.HasIndex("IdCnae");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdMotivo");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdPais");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Motivo", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("Motivos");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Municipio", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("WorkerService1.Entityes.NaturezaJuridica", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("NaturezasJuridicas");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Pais", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("WorkerService1.Entityes.QualificacaoSocio", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("QualificacoesSocios");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Simples", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_basico");

                    b.Property<string>("DataExclusaoMei")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_exclusao_mei");

                    b.Property<string>("DataExclusaoSimples")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_exclusao_simples");

                    b.Property<string>("DataOpcaoMei")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_opcao_mei");

                    b.Property<string>("DataOpcaoSimples")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_opcao_simples");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("empresa_id");

                    b.Property<string>("OpcaoMei")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opcao_pelo_mei");

                    b.Property<string>("OpcaoSimples")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opcao_pelo_simples");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Simples");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Socio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_basico");

                    b.Property<string>("CnpjCpfSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj_cpf_socio");

                    b.Property<string>("CodigoQualificacaoRepresentanteLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo_qualificacao_representante_legal");

                    b.Property<string>("DataEntradaSociedade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_entrada_sociedade");

                    b.Property<string>("FaixaEtaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("faixa_etaria");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("empresa_id");

                    b.Property<string>("IdPais")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("pais_id");

                    b.Property<string>("IdQualificacaoSocio")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("qualificacao_socio_id");

                    b.Property<string>("IdentificadorSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identificador_socio");

                    b.Property<string>("NomeRepresentanteLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_representante_legal");

                    b.Property<string>("NomeSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_socio");

                    b.Property<string>("NumeroCpfRepresentanteLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numero_cpf_representante_legal");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPais");

                    b.HasIndex("IdQualificacaoSocio");

                    b.ToTable("Socios");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Empresa", b =>
                {
                    b.HasOne("WorkerService1.Entityes.NaturezaJuridica", "NaturezaJuridica")
                        .WithMany()
                        .HasForeignKey("IdNaturezaJuridica");

                    b.Navigation("NaturezaJuridica");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Estabelecimento", b =>
                {
                    b.HasOne("WorkerService1.Entityes.Cnae", "Cnae")
                        .WithMany()
                        .HasForeignKey("IdCnae")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkerService1.Entityes.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("WorkerService1.Entityes.Motivo", "Motivos")
                        .WithMany()
                        .HasForeignKey("IdMotivo");

                    b.HasOne("WorkerService1.Entityes.Municipio", "Municipios")
                        .WithMany()
                        .HasForeignKey("IdMunicipio");

                    b.HasOne("WorkerService1.Entityes.Pais", "pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("Cnae");

                    b.Navigation("Empresa");

                    b.Navigation("Motivos");

                    b.Navigation("Municipios");

                    b.Navigation("pais");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Simples", b =>
                {
                    b.HasOne("WorkerService1.Entityes.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("WorkerService1.Entityes.Socio", b =>
                {
                    b.HasOne("WorkerService1.Entityes.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("WorkerService1.Entityes.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.HasOne("WorkerService1.Entityes.QualificacaoSocio", "QualificacaoSocio")
                        .WithMany()
                        .HasForeignKey("IdQualificacaoSocio");

                    b.Navigation("Empresa");

                    b.Navigation("Pais");

                    b.Navigation("QualificacaoSocio");
                });
#pragma warning restore 612, 618
        }
    }
}
